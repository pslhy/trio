type token =
    WITH
  | WILDCARD
  | UNIT
  | UID of string
  | TYPE
  | SYNTH
  | STR of string
  | STAR
  | SEMI
  | SATISFYING
  | RPAREN
  | RBRACKET
  | PIPE
  | OF
  | NEQ
  | MATCH
  | LPAREN
  | LID of string
  | LET
  | LBRACKET
  | INT of int
  | INCLUDE
  | FUN
  | FIX
  | FATEQ
  | EQ
  | EOF
  | DOT
  | COMMA
  | COLON
  | ARR
val appify : Expr.t -> Expr.t list -> Expr.t
val mk_unctor_or_ctor_by_name : string -> Expr.t -> Expr.t
val menhir_begin_marker : int
val xv_unprocessed_problem : Specification.t_unprocessed
val xv_typ_variant : Type.t
val xv_typ_unit : Type.t
val xv_typ_tuple_list_one : Type.t list
val xv_typ_tuple_list : Type.t list
val xv_typ_tuple : Type.t
val xv_typ_single_variant : string * Type.t
val xv_typ_paren : Type.t
val xv_typ_non_variant : Type.t
val xv_typ_non_arrow : Type.t
val xv_typ_base : Type.t
val xv_typ_arrow : Type.t
val xv_typ : Type.t
val xv_spec : Specification.unprocessed_spec
val xv_pattern_list : Expr.Pattern.t list
val xv_pattern : Expr.Pattern.t
val xv_nonempty_exp_list : Expr.t list
val xv_nonempty_examples : (Expr.t list * Expr.t) list
val xv_imports_decls_start : string list * Expr.declaration list
val xv_imports_decls : string list * Expr.declaration list
val xv_imports : string list
val xv_exp_list : Expr.t list
val xv_exp_comma_list_one : Expr.t list
val xv_exp_base : Expr.t
val xv_exp_app_list : Expr.t list
val xv_exp_app : Expr.t
val xv_exp : Expr.t
val xv_examples : (Expr.t list * Expr.t) list
val xv_example : Expr.t list * Expr.t
val xv_decl_list : Expr.declaration list
val xv_decl : Expr.declaration
val xv_branches : (Expr.Pattern.t * Expr.t) list
val xv_branch : Expr.Pattern.t * Expr.t
val xv_arg : Expr.param
val menhir_end_marker : int
