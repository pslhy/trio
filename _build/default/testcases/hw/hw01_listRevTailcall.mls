type nat =
  | O
  | S of nat

type list =
  | Nil
  | Cons of nat * list

synth list -> list -> list satisfying

[Nil,Nil] -> Nil,
[Nil, Cons(2,Cons(1,Nil))] -> Cons(2,Cons(1,Nil)),
[Cons(1,Cons(2,Cons(3,Nil))), Cons(4,Cons(5,Nil))] -> Cons(3,Cons(2,Cons(1,Cons(4,Cons(5,Nil))))),
[Cons(3,Cons(5,Nil)), Cons(2,Cons(5,Nil))] -> Cons(5,Cons(3,Cons(2,Cons(5,Nil)))),
[Cons(3,Cons(5,Nil)), Nil] -> Cons(5,Cons(3,Nil)),
[Cons(0,Nil),Nil] -> Cons(0,Nil),
[Cons(0,Cons(1,Nil)),Nil] -> Cons(1,Cons(0,Nil)),
