testcases/new
expr_extend.mls
prog : testcases/new/expr_extend.mls
Command exited with non-zero status 124
time(s): 599.98 
mem(Kb): 101440


list_merge.mls
prog : testcases/new/list_merge.mls
Command exited with non-zero status 124
time(s): 599.98 
mem(Kb): 21556


tree_height.mls
prog : testcases/new/tree_height.mls
let rec (f : (tree -> nat)) = 
  fun (x:tree) -> 
    match x with
    Leaf(_) -> 
      O([])
    Node(_) -> 
      match (Un_Node(x)).2 with
      Leaf(_) -> 
        S((f (Un_Node(x)).1))
      Node(_) -> 
        match (Un_Node(x)).1 with
        Leaf(_) -> 
          (f (Un_Node(x)).2)
        Node(_) -> 
          S(S(((max (f (Un_Node(x)).1)) (Un_Node(x)).0)))
        
      
    
time(s): 82.23 
mem(Kb): 30028


dropeven.mls
prog : testcases/new/dropeven.mls
let rec (f : (list -> list)) = 
  fun (x:list) -> 
    match x with
    Nil(_) -> 
      x
    Cons(_) -> 
      match (is_even (Un_Cons(x)).0) with
      False(_) -> 
        Cons([(Un_Cons(x)).0, (f (Un_Cons(x)).1)])
      True(_) -> 
        (Un_Cons(x)).1
      
    
time(s): 0.04 
mem(Kb): 5488


tree_notexist.mls
prog : testcases/new/tree_notexist.mls
let rec (f : ((nat, tree) -> bool)) = 
  fun (x:(nat, tree)) -> 
    match (x).1 with
    Leaf(_) -> 
      True([])
    Node(_) -> 
      match ((compare (x).0) S((Un_Node((x).1)).0)) with
      EQ(_) -> 
        True([])
      GT(_) -> 
        (f [(x).0, (Un_Node((x).1)).2])
      LT(_) -> 
        False([])
      
    
time(s): 0.07 
mem(Kb): 10716


tree_max.mls
prog : testcases/new/tree_max.mls
Command exited with non-zero status 124
time(s): 600.00 
mem(Kb): 305112


expr.mls
prog : testcases/new/expr.mls
let rec (f : (exp -> nat)) = 
  fun (x:exp) -> 
    match x with
    INT(_) -> 
      Un_INT(x)
    ADD(_) -> 
      ((add (f (Un_ADD(x)).0)) (f (Un_ADD(x)).1))
    MUL(_) -> 
      ((mul (f (Un_MUL(x)).0)) (f (Un_MUL(x)).1))
    
time(s): 1.02 
mem(Kb): 28604


tree_lastleft.mls
prog : testcases/new/tree_lastleft.mls
let rec (f : (tree -> nat)) = 
  fun (x:tree) -> 
    match x with
    Leaf(_) -> 
      O([])
    Node(_) -> 
      match (Un_Node(x)).1 with
      Leaf(_) -> 
        (Un_Node(x)).0
      Node(_) -> 
        (f (Un_Node(x)).1)
      
    
time(s): 0.28 
mem(Kb): 18448


tree_balanced.mls
prog : testcases/new/tree_balanced.mls
let rec (f : (tree -> bool)) = 
  fun (x:tree) -> 
    match x with
    Leaf(_) -> 
      True([])
    Node(_) -> 
      match (Un_Node(x)).1 with
      Leaf(_) -> 
        True([])
      Node(_) -> 
        match ((compare (height (Un_Node((Un_Node(x)).1)).2)) S(O([]))) with
        EQ(_) -> 
          True([])
        GT(_) -> 
          False([])
        LT(_) -> 
          match (Un_Node((Un_Node(x)).1)).1 with
          Leaf(_) -> 
            True([])
          Node(_) -> 
            False([])
          
        
      
    
time(s): 91.18 
mem(Kb): 63076


expr_b.mls
prog : testcases/new/expr_b.mls
let rec (f : (formula -> bool)) = 
  fun (x:formula) -> 
    match x with
    BOOL(_) -> 
      Un_BOOL(x)
    NOT(_) -> 
      (bnot (f Un_NOT(x)))
    ANDALSO(_) -> 
      ((band (f (Un_ANDALSO(x)).0)) (f (Un_ANDALSO(x)).1))
    IMPLY(_) -> 
      ((bor (f (Un_IMPLY(x)).1)) (bnot (f (Un_IMPLY(x)).0)))
    ORELSE(_) -> 
      ((bor (f (Un_ORELSE(x)).0)) (f (Un_ORELSE(x)).1))
    
time(s): 16.95 
mem(Kb): 55452


range.mls
prog : testcases/new/range.mls
Command exited with non-zero status 124
time(s): 600.04 
mem(Kb): 277304


