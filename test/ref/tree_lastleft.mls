type nat =
  | O
  | S of nat

type bool =
  | True
  | False

type tree =
  | Leaf
  | Node of nat * tree * tree

synth tree -> nat satisfying

equiv

fix (f : tree -> nat) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> 0
      | Node y -> (match y.1 with
                     | Leaf _ -> y.0
                     | Node _ -> f y.1)