type bool =
  | True
  | False

type list =
  | Nil
  | Cons of bool * list

let bnot =
 fix (bnot : bool -> bool) =
   fun (x: bool) ->
    match x with
    | False ->
        True
    | True ->
        False
;;  

synth list -> bool satisfying

[Nil] -> True,
[Cons(False,Nil)] -> True,
[Cons(True,Nil)] -> False,
[Cons(False,Cons(False,Nil))] -> True,
[Cons(False,Cons(True,Nil))] -> False,
[Cons(True,Cons(False,Nil))] -> False,
[Cons(True,Cons(True,Nil))] -> True,