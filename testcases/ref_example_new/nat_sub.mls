type nat =
  | O
  | S of nat

synth nat -> nat -> nat satisfying

[2,2] -> 0,
[2,1] -> 1,
[0,2] -> 0,
[1,1] -> 0,
[1,0] -> 1,
[0,1] -> 0,
[5,2] -> 3,
[6,2] -> 4,

equiv

fix (f : nat -> nat -> nat) =
    fun (n1 : nat) ->
      fun (n2 : nat) ->
        match n1 with
        | O -> O
        | S n1p -> match n2 with
                    | O -> n1
                    | S n2p -> (f n1p n2p)