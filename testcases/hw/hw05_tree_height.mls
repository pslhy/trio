type nat =
  | O
  | S of nat

type tree =
  | Leaf
  | Node of nat * tree * tree

synth tree -> nat satisfying

[Leaf] -> 0,
[Node (0, Leaf, Leaf)] -> 1,
[Node (0, Node (1, Leaf, Leaf), Leaf)] -> 2,
[Node (0, Leaf, Node (1, Leaf, Leaf))] -> 2,
[Node (0, Node (1, Leaf, Leaf), Node (2, Leaf, Leaf))] -> 2,
[Node (0, Node (1, Node (2, Leaf, Leaf), Leaf), Leaf)] -> 3,